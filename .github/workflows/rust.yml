name: Cruiser Rust Checks
on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  update_cargo:
    name: Updates cargo dependencies on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./Cargo.lock
          key: cargo-update-${{ matrix.rust }}-${{ steps.current-time.outputs.time }}
          restore-keys: |
            cargo-update-${{ matrix.rust }}-

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Update dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update

      - name: Fetch dependencies
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Install Make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make

      - name: Tar files together
        run: |
          set -e
          tar -cvf cargo.tar ~/.cargo

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}
          path: |
            cargo.tar
            ./Cargo.lock

  fetch_solana:
    name: Fetch Solana version ${{ matrix.solana }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # If updated must also update in `test_all`
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Solana
        run: |
          set -e
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"

      - name: Tar files together
        run: |
          set -e
          tar -cvf solana.tar $HOME/.local/share/solana/install

      - name: Upload Solana
        uses: actions/upload-artifact@v3
        with:
          name: solana-${{ matrix.solana }}
          if-no-files-found: error
          path: solana.tar

  check_versions:
    name: Check versions is not on crates.io
    needs: [ update_cargo ]
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-check_versions-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-check_versions-

      - name: Check versions
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: check_versions

  check_fmt:
    name: Format cruiser on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo ]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-check_fmt-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-check_fmt-

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: check_fmt

  check_escrow_example:
    name: Check escrow_example on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-check_escrow_example-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-check_escrow_example-

      - name: Run check_escrow_example
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: check_escrow_example

  check_cruiser:
    name: Check cruiser on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-check_escrow_example-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-check_escrow_example-

      - name: Run check_cruiser
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: check_cruiser

  doc:
    name: Check docs on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-doc-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-doc-

      - name: Run doc
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: doc

  publish_dry_run:
    name: Check publish dry run on Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-publish_dry_run-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-publish_dry_run-

      - name: Run publish dry run
        uses: actions-rs/cargo@v1
        env:
          DRY_RUN: true
          ALLOW_DIRTY: true
        with:
          command: make
          args: publish_all

  test_easy_proc_common:
    name: Test easy_proc_common on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_easy_proc_common-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_easy_proc_common-

      - name: Run test_easy_proc_common
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_easy_proc_common

  test_easy_proc_derive:
    name: Test easy_proc_derive on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_easy_proc_derive-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_easy_proc_derive-

      - name: Run test_easy_proc_derive
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_easy_proc_derive

  test_easy_proc:
    name: Test easy_proc on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_easy_proc-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_easy_proc-

      - name: Run test_easy_proc
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_easy_proc

  test_escrow_example:
    name: Test escrow_example on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_escrow_example-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_escrow_example-

      - name: Run test_escrow_example
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_escrow_example

  test_cruiser_derive:
    name: Test cruiser_derive on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_cruiser_derive-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_cruiser_derive-

      - name: Run test_cruiser_derive
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_cruiser_derive

  test_cruiser:
    name: Test cruiser on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}
    needs: [ update_cargo, fetch_solana ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'v1.9.17', 'v1.9.18', 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use cargo cache
        uses: actions/download-artifact@v3
        with:
          name: cargo-${{ matrix.rust }}

      - name: Use solana cache
        uses: actions/download-artifact@v3
        with:
          name: solana-${{ matrix.solana }}

      - name: Extract tars
        run: |
          set -e
          tar -xvf cargo.tar --directory /
          rm cargo.tar
          tar -xvf solana.tar --directory /
          rm solana.tar
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-test_cruiser-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            cargo-test_cruiser-

      - name: Run test_cruiser
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test_cruiser
